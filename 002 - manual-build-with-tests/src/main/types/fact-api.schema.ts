/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/courts/{slug}/general": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court details by slug */
        get: operations["findCourtByName_1"];
        /** Update court */
        put: operations["updateCourtBySlug"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/{slug}/courtPhoto": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find the photo for a court */
        get: operations["getCourtImageBySlug"];
        /** Update the photo for a court */
        put: operations["updateCourtImageBySlug"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update selected courts info */
        put: operations["updateCourtsInfo"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/openingTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve all opening types */
        get: operations["getAllOpeningTypes"];
        /** Update opening type */
        put: operations["updateOpeningType"];
        /** Create opening type */
        post: operations["createOpeningType"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/localauthorities/{localAuthorityId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update local authority */
        put: operations["updateLocalAuthority"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/facilities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all facility types */
        get: operations["getAllFacilities"];
        /** Update facility type */
        put: operations["updateFacilityType"];
        /** Create new facility type */
        post: operations["createFacilityType"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/facilities/reorder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Reorder facility types */
        put: operations["reorderFacilityTypes"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{sourceSlug}/{destinationSlug}/postcodes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Move postcodes from one court to another */
        put: operations["movePostcodes"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/{areaOfLaw}/localAuthorities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find a courts local authorities by slug */
        get: operations["getCourtLocalAuthorities"];
        /** Update a courts local authorities for a area of law by super admin */
        put: operations["updateCourtLocalAuthorities"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/openingTimes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court opening times by slug */
        get: operations["getCourtOpeningTimes"];
        /** Update court opening times */
        put: operations["updateCourtOpeningTimes"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all court histories of a court */
        get: operations["getCourtHistoryByCourtSlug"];
        /** Replace the court histories of a given court */
        put: operations["updateCourtHistories"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/generalInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve court general information */
        get: operations["getCourtGeneralInfo"];
        /** Update court general information */
        put: operations["updateCourtGeneralInfo"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/facilities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find a court's facilities by slug */
        get: operations["getCourtFacilities"];
        /** Update a court's facilities */
        put: operations["updateCourtFacility"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/emails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find email addresses by slug */
        get: operations["getCourtEmails"];
        /** Update email addresses for a provided court */
        put: operations["updateCourtEmails"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/courtTypesAndCodes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find a court's types, GBS code and Dx codes by slug */
        get: operations["getCourtTypesAndCodes"];
        /** Update a court's types, GBS code and Dx codes */
        put: operations["updateCourtTypesAndCodes"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/courtAreasOfLaw": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find the areas of law for a court */
        get: operations["getCourtAreasOfLaw"];
        /** Update the areas of law for a court */
        put: operations["updateCourtAreasOfLaw"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court contacts by slug */
        get: operations["getCourtContacts"];
        /** Update court contacts */
        put: operations["updateCourtContacts"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/application-progression": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find application progression options by slug */
        get: operations["getApplicationUpdates"];
        /** Update application progression options for a provided service centre */
        put: operations["updateApplicationUpdates"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/addresses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court addresses by slug */
        get: operations["getCourtAddresses"];
        /** Update addresses for a provided court */
        put: operations["updateCourtAddresses"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/additionalLinks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court additional links by slug */
        get: operations["getCourtAdditionalLinks"];
        /** Update court additional links */
        put: operations["updateCourtAdditionalLinks"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/SpoeAreasOfLaw": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find the spoe areas of law for a court */
        get: operations["getCourtAreasOfLaw_1"];
        /** Update the spoe areas of law for a court */
        put: operations["updateCourtAreasOfLaw_1"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all court histories */
        get: operations["getAllCourtHistory"];
        /** Change an existing court history */
        put: operations["updateCourtHistory"];
        /** Add a new court history */
        post: operations["addCourtHistory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/contactTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all contact types */
        get: operations["getAllContactTypes"];
        /** Update contact type */
        put: operations["updateContactType"];
        /** Create contact type */
        post: operations["createContactType"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/areasOfLaw": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all areas of law */
        get: operations["getAllAreasOfLaw_1"];
        /** Update area of law */
        put: operations["updateAreaOfLaw"];
        /** Create area of law */
        post: operations["createAreaOfLaw"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find courts by name, address, town or postcode */
        get: operations["findCourtByNameOrAddressOrPostcodeOrTown"];
        put?: never;
        /** Add a new court */
        post: operations["addNewCourt"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/postcodes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court postcodes by slug */
        get: operations["getCourtPostcodes"];
        put?: never;
        /** Add new court postcodes */
        post: operations["addCourtPostcodes"];
        /** Delete existing court postcodes */
        delete: operations["deleteCourtPostcodes"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/lock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court lock details by slug and username */
        get: operations["getCourtLocks"];
        put?: never;
        /** Add a new lock on a court for a given user */
        post: operations["addNewCourtLock"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/services": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all services */
        get: operations["getAllServices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/services/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return a service */
        get: operations["getService"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/services/{serviceSlug}/service-areas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all service areas for a service */
        get: operations["getServiceAreas"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service-areas/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return a service */
        get: operations["getServiceArea"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/results": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find courts by postcode and Service Area */
        get: operations["findCourtsByPostcodeAndServiceArea"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/results/{postcode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find closest courts by postcode */
        get: operations["findCourtsByPostcode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/results.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find court by postcode, address or name
         * @deprecated
         */
        get: operations["findCourtByPostcode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/feature-flags/{flag}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["flagStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find court details by slug */
        get: operations["findCourtByName"];
        put?: never;
        post?: never;
        /** Delete a court */
        delete: operations["deleteCourt"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/{slug}.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find court details by name
         * @deprecated
         */
        get: operations["findCourtByNameDeprecated"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return active courts based on a provided prefix */
        get: operations["getCourtsBySearch"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/court-types/{courtTypes}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find courts by court types. This endpoint can be used to search for courts that have a court type associated to it */
        get: operations["findByCourtTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/court-history/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return active court based a search of old court names */
        get: operations["getCourtByCourtHistoryNameSearch"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all courts */
        get: operations["getAllCourts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/courts/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return court data for download */
        get: operations["getAllCourtsForDownload"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/serviceAreas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all service areas */
        get: operations["getServiceArea_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/regions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve all regions */
        get: operations["getAllRegions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/openingTypes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get opening type */
        get: operations["getOpeningType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/localauthorities/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all local authorities */
        get: operations["getAllLocalAuthorities"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/facilities/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get facility type */
        get: operations["getFacilityType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/name/{courtName}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a court history using a historical court name */
        get: operations["getCourtHistoryByCourtName"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/id/{courtHistoryId}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a court history */
        get: operations["getCourtHistoryById"];
        put?: never;
        post?: never;
        /** Delete a Court History */
        delete: operations["deleteByCourtHistoryId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/emailTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve all email details for provided court */
        get: operations["getAllCourtEmailDescTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/courtTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all court types */
        get: operations["getAllCourtTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/court-id/{courtId}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all court histories of a court */
        get: operations["getCourtHistoryByCourtId"];
        put?: never;
        post?: never;
        /** Delete the court histories of a specific court */
        delete: operations["deleteCourtHistoriesByCourtId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/SpoeAreasOfLaw": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return all spoe areas of law */
        get: operations["getAllAreasOfLaw"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/counties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve all counties */
        get: operations["getAllCounties"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/contactTypes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get contact type */
        get: operations["getContactType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/audit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find all audits based on the provided parameters. */
        get: operations["getAudits"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/areasOfLaw/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get area of law */
        get: operations["getAreaOfLaw"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/addressTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve all address types */
        get: operations["getAllCourtAddressTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["welcome"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/openingTypes/{openingTypeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete opening type */
        delete: operations["deleteOpeningType"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/facilities/{facilityTypeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete facility type */
        delete: operations["deleteFacilityType"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{userEmail}/lock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete a court lock by email */
        delete: operations["deleteCourtByEmail"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/courts/{slug}/lock/{userEmail}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete a court lock by slug and email */
        delete: operations["deleteCourtLockBySlugAndEmail"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/contactTypes/{contactTypeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete contact type */
        delete: operations["deleteContactType"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/areasOfLaw/{areaOfLawId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete area of law */
        delete: operations["deleteAreaOfLaw"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Court: {
            slug?: string;
            name?: string;
            name_cy?: string;
            info?: string;
            info_cy?: string;
            open?: boolean;
            in_person?: boolean;
            access_scheme?: boolean;
            opening_times?: components["schemas"]["OpeningTime"][];
            common_platform?: boolean;
            urgent_message?: string;
            urgent_message_cy?: string;
            types?: components["schemas"]["CourtType"][];
        };
        CourtType: {
            /** Format: int32 */
            id?: number;
            name?: string;
            search?: string;
            /** Format: int32 */
            code?: number;
        };
        OpeningTime: {
            description?: string;
            hours?: string;
            description_cy?: string;
        };
        ImageFile: {
            image_name?: string;
        };
        CourtInfoUpdate: {
            courts?: string[];
            info?: string;
            info_cy?: string;
        };
        OpeningType: {
            /** Format: int32 */
            id?: number;
            type?: string;
            type_cy?: string;
        };
        LocalAuthority: {
            /** Format: int32 */
            id?: number;
            name?: string;
        };
        FacilityType: {
            /** Format: int32 */
            id?: number;
            name?: string;
            nameCy?: string;
            image?: string;
            imageDescription?: string;
            imageFilePath?: string;
            /** Format: int32 */
            order?: number;
        };
        CourtHistory: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            search_court_id?: number;
            court_name?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            created_at?: string;
            court_name_cy?: string;
        };
        CourtGeneralInfo: {
            name?: string;
            open?: boolean;
            info?: string;
            alert?: string;
            in_person?: boolean;
            access_scheme?: boolean;
            info_cy?: string;
            alert_cy?: string;
            sc_intro_paragraph?: string;
            sc_intro_paragraph_cy?: string;
            service_centre?: boolean;
            common_platform?: boolean;
        };
        Facility: {
            /** Format: int32 */
            id?: number;
            description?: string;
            descriptionCy?: string;
        };
        Email: {
            address?: string;
            explanation?: string;
            explanationCy?: string;
            /** Format: int32 */
            adminEmailTypeId?: number;
        };
        CourtTypesAndCodes: {
            gbsCode?: string;
            dxCodes?: components["schemas"]["DxCode"][];
            types?: components["schemas"]["CourtType"][];
        };
        DxCode: {
            code?: string;
            explanation?: string;
            explanationCy?: string;
        };
        AreaOfLaw: {
            /** Format: int32 */
            id?: number;
            name?: string;
            singlePointEntry?: boolean;
            external_link?: string;
            external_link_desc?: string;
            external_link_desc_cy?: string;
            alt_name?: string;
            alt_name_cy?: string;
            display_name?: string;
            display_name_cy?: string;
            display_external_link?: string;
        };
        Contact: {
            number?: string;
            explanation?: string;
            fax?: boolean;
            /** Format: int32 */
            type_id?: number;
            explanation_cy?: string;
        };
        ApplicationUpdate: {
            type?: string;
            email?: string;
            type_cy?: string;
            external_link?: string;
            external_link_description?: string;
            external_link_description_cy?: string;
        };
        CourtAddress: {
            /** Format: int32 */
            id?: number;
            postcode?: string;
            /** Format: int32 */
            type_id?: number;
            address_lines?: string[];
            address_lines_cy?: string[];
            town?: string;
            town_cy?: string;
            /** Format: int32 */
            county_id?: number;
            fields_of_law?: components["schemas"]["CourtSecondaryAddressType"];
            /** Format: int32 */
            sort_order?: number;
            epim_id?: string;
        };
        CourtSecondaryAddressType: {
            areas_of_law?: components["schemas"]["AreaOfLaw"][];
            courts?: components["schemas"]["CourtType"][];
        };
        AdditionalLink: {
            url?: string;
            display_name?: string;
            display_name_cy?: string;
        };
        SpoeAreaOfLaw: {
            /** Format: int32 */
            id?: number;
            name?: string;
            singlePointEntry?: boolean;
        };
        ContactType: {
            /** Format: int32 */
            id?: number;
            type?: string;
            type_cy?: string;
        };
        NewCourt: {
            new_court_name?: string;
            service_centre?: boolean;
            service_areas?: string[];
            /** Format: double */
            lon?: number;
            /** Format: double */
            lat?: number;
        };
        CourtLock: {
            /** Format: int32 */
            id?: number;
            /** Format: date-time */
            lock_acquired?: string;
            user_email?: string;
            court_slug?: string;
        };
        Service: {
            name?: string;
            description?: string;
            slug?: string;
            serviceAreas?: components["schemas"]["ServiceArea"][];
        };
        ServiceArea: {
            name?: string;
            description?: string;
            slug?: string;
            serviceAreaType?: string;
            onlineUrl?: string;
            onlineText?: string;
            areaOfLawName?: string;
            serviceAreaCourts?: components["schemas"]["ServiceAreaCourt"][];
            text?: string;
        };
        ServiceAreaCourt: {
            slug?: string;
            catchmentType?: string;
            courtName?: string;
        };
        CourtReferenceWithDistance: {
            name?: string;
            slug?: string;
            open?: boolean;
            distance?: number;
            areasOfLawSpoe?: string[];
        };
        ServiceAreaWithCourtReferencesWithDistance: {
            slug?: string;
            name?: string;
            onlineText?: string;
            onlineUrl?: string;
            courts?: components["schemas"]["CourtReferenceWithDistance"][];
        };
        CourtWithDistance: {
            name?: string;
            /** Format: double */
            lat?: number;
            /** Format: double */
            lon?: number;
            /** Format: int32 */
            number?: number;
            /** Format: int32 */
            cci_code?: number;
            /** Format: int32 */
            magistrate_code?: number;
            slug?: string;
            types?: string[];
            areas_of_law?: components["schemas"]["AreaOfLaw"][];
            areas_of_law_spoe?: string[];
            displayed?: boolean;
            hide_aols?: boolean;
            dx_number?: string;
            distance?: number;
            addresses?: components["schemas"]["CourtAddress"][];
        };
        CourtReference: {
            name?: string;
            slug?: string;
            updated_at?: string;
            displayed?: boolean;
            /** Format: int32 */
            region?: number;
        };
        OldCourt: {
            name?: string;
            slug?: string;
            info?: string;
            open?: boolean;
            directions?: string;
            /** Format: double */
            lat?: number;
            /** Format: double */
            lon?: number;
            /** Format: int32 */
            crown_location_code?: number;
            /** Format: int32 */
            county_location_code?: number;
            /** Format: int32 */
            cci_code?: number;
            /** Format: int32 */
            magistrates_location_code?: number;
            areas_of_law?: string[];
            types?: string[];
            emails?: components["schemas"]["Email"][];
            contacts?: components["schemas"]["Contact"][];
            opening_times?: components["schemas"]["OpeningTime"][];
            facilities?: components["schemas"]["OldFacility"][];
            addresses?: components["schemas"]["OldCourtAddress"][];
            gbs?: string;
            /** Format: int32 */
            location_code?: number;
            /** Format: int32 */
            court_code?: number;
            areas_of_law_spoe?: string[];
        };
        OldCourtAddress: {
            type?: string;
            address?: string;
            town?: string;
            postcode?: string;
        };
        OldFacility: {
            description?: string;
            name?: string;
        };
        CourtReferenceWithHistoricalName: {
            name?: string;
            slug?: string;
            updated_at?: string;
            displayed?: boolean;
            /** Format: int32 */
            region?: number;
            historicalName?: string;
        };
        CourtForDownload: {
            name?: string;
            open?: string;
            updated?: string;
            addresses?: string;
            areas_of_law?: string;
            court_types?: string;
            /** Format: int32 */
            crown_court_code?: number;
            /** Format: int32 */
            county_court_code?: number;
            /** Format: int32 */
            magistrates_court_code?: number;
            facilities?: string;
            slug?: string;
            emails?: string;
            contacts?: string;
            opening_times?: string;
            application_updates?: string;
            dx_number?: string;
        };
        Region: {
            /** Format: int32 */
            id?: number;
            name?: string;
            country?: string;
        };
        EmailType: {
            /** Format: int32 */
            id?: number;
            description?: string;
            description_cy?: string;
        };
        County: {
            /** Format: int32 */
            id?: number;
            name?: string;
            country?: string;
        };
        Audit: {
            /** Format: int32 */
            id?: number;
            action?: components["schemas"]["AuditType"];
            location?: string;
            user_email?: string;
            action_data_before?: string;
            action_data_after?: string;
            /** Format: date-time */
            creation_time?: string;
        };
        AuditType: {
            /** Format: int32 */
            id?: number;
            name?: string;
        };
        AddressType: {
            /** Format: int32 */
            id?: number;
            name?: string;
            name_cy?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    findCourtByName_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
        };
    };
    updateCourtBySlug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Court"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
        };
    };
    getCourtImageBySlug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    updateCourtImageBySlug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImageFile"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    updateCourtsInfo: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtInfoUpdate"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAllOpeningTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"][];
                };
            };
        };
    };
    updateOpeningType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OpeningType"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Invalid Opening type */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Opening type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
        };
    };
    createOpeningType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OpeningType"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Invalid opening type */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Opening type already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
        };
    };
    updateLocalAuthority: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                localAuthorityId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string;
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"];
                };
            };
            /** @description Invalid Local Authority */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"];
                };
            };
            /** @description Local Authority not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"];
                };
            };
            /** @description Local Authority already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"];
                };
            };
        };
    };
    getAllFacilities: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
        };
    };
    updateFacilityType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FacilityType"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Facility Type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Facility Type already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
        };
    };
    createFacilityType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FacilityType"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Facility Type already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
        };
    };
    reorderFacilityTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
            /** @description Facility Type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"][];
                };
            };
        };
    };
    movePostcodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                sourceSlug: string;
                destinationSlug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Invalid postcodes */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Postcodes do not exist */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Postcodes already exist */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    getCourtLocalAuthorities: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
                areaOfLaw: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"][];
                };
            };
        };
    };
    updateCourtLocalAuthorities: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
                areaOfLaw: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocalAuthority"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"][];
                };
            };
        };
    };
    getCourtOpeningTimes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningTime"][];
                };
            };
        };
    };
    updateCourtOpeningTimes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OpeningTime"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningTime"][];
                };
            };
        };
    };
    getCourtHistoryByCourtSlug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful - Will return an empty response when no Court matches ID */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
        };
    };
    updateCourtHistories: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtHistory"][];
            };
        };
        responses: {
            /** @description Successfully updated court */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Court Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
        };
    };
    getCourtGeneralInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtGeneralInfo"];
                };
            };
        };
    };
    updateCourtGeneralInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtGeneralInfo"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtGeneralInfo"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtGeneralInfo"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtGeneralInfo"];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtGeneralInfo"];
                };
            };
            /** @description Court already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtGeneralInfo"];
                };
            };
        };
    };
    getCourtFacilities: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
            /** @description Court not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
        };
    };
    updateCourtFacility: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Facility"][];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
            /** @description Court not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Facility"][];
                };
            };
        };
    };
    getCourtEmails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Email"][];
                };
            };
        };
    };
    updateCourtEmails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Email"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Email"][];
                };
            };
        };
    };
    getCourtTypesAndCodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
        };
    };
    updateCourtTypesAndCodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtTypesAndCodes"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtTypesAndCodes"];
                };
            };
        };
    };
    getCourtAreasOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
        };
    };
    updateCourtAreasOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AreaOfLaw"][];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
        };
    };
    getCourtContacts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contact"][];
                };
            };
        };
    };
    updateCourtContacts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Contact"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contact"][];
                };
            };
        };
    };
    getApplicationUpdates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
        };
    };
    updateApplicationUpdates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApplicationUpdate"][];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApplicationUpdate"][];
                };
            };
        };
    };
    getCourtAddresses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
        };
    };
    updateCourtAddresses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtAddress"][];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Invalid postcodes or epim IDs */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtAddress"][];
                };
            };
        };
    };
    getCourtAdditionalLinks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
        };
    };
    updateCourtAdditionalLinks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdditionalLink"][];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdditionalLink"][];
                };
            };
        };
    };
    getCourtAreasOfLaw_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
        };
    };
    updateCourtAreasOfLaw_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SpoeAreaOfLaw"][];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Duplicate single point of entries exist */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
        };
    };
    getAllCourtHistory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
        };
    };
    updateCourtHistory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtHistory"];
            };
        };
        responses: {
            /** @description Successfully updated court */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Court History Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
        };
    };
    addCourtHistory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtHistory"];
            };
        };
        responses: {
            /** @description Successfully created court */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
        };
    };
    getAllContactTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"][];
                };
            };
        };
    };
    updateContactType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ContactType"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Contact type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
        };
    };
    createContactType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ContactType"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Contact type already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
        };
    };
    getAllAreasOfLaw_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"][];
                };
            };
        };
    };
    updateAreaOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AreaOfLaw"];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Invalid Area of Law */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Area of Law not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
        };
    };
    createAreaOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AreaOfLaw"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Invalid Area of Law */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Area of Law already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
        };
    };
    findCourtByNameOrAddressOrPostcodeOrTown: {
        parameters: {
            query: {
                q: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReference"][];
                };
            };
        };
    };
    addNewCourt: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NewCourt"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
            /** @description Court already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
        };
    };
    getCourtPostcodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    addCourtPostcodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Postcodes created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Invalid postcodes */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Court not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Postcodes already exist */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    deleteCourtPostcodes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Invalid postcodes */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Postcodes do not exist */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    getCourtLocks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
        };
    };
    addNewCourtLock: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CourtLock"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"];
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"];
                };
            };
            /** @description Court lock already exists */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"];
                };
            };
        };
    };
    getAllServices: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Service"][];
                };
            };
        };
    };
    getService: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Service"];
                };
            };
        };
    };
    getServiceAreas: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serviceSlug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceArea"][];
                };
            };
        };
    };
    getServiceArea: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceArea"];
                };
            };
        };
    };
    findCourtsByPostcodeAndServiceArea: {
        parameters: {
            query?: {
                postcode?: string;
                serviceArea?: string;
                includeClosed?: boolean;
                action?: "NEAREST" | "DOCUMENTS" | "UPDATE" | "UNDEFINED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceAreaWithCourtReferencesWithDistance"];
                };
            };
        };
    };
    findCourtsByPostcode: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                postcode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReferenceWithDistance"][];
                };
            };
        };
    };
    findCourtByPostcode: {
        parameters: {
            query?: {
                postcode?: string;
                aol?: string;
                q?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtWithDistance"][];
                };
            };
        };
    };
    flagStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                flag: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    findCourtByName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"];
                };
            };
        };
    };
    deleteCourt: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Deleted */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    findCourtByNameDeprecated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OldCourt"];
                };
            };
        };
    };
    getCourtsBySearch: {
        parameters: {
            query: {
                prefix: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReference"][];
                };
            };
        };
    };
    findByCourtTypes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                courtTypes: string[];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Court"][];
                };
            };
        };
    };
    getCourtByCourtHistoryNameSearch: {
        parameters: {
            query: {
                q: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful - returns empty CourtReferenceWithHistoricalName */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReferenceWithHistoricalName"];
                };
            };
            /** @description Successful - but no history found, so returns no content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReferenceWithHistoricalName"];
                };
            };
            /** @description Court History Found but No corresponding Court found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReferenceWithHistoricalName"];
                };
            };
        };
    };
    getAllCourts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtReference"][];
                };
            };
        };
    };
    getAllCourtsForDownload: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtForDownload"][];
                };
            };
        };
    };
    getServiceArea_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceArea"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceArea"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceArea"][];
                };
            };
        };
    };
    getAllRegions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Region"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Region"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Region"][];
                };
            };
        };
    };
    getOpeningType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
            /** @description Opening type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpeningType"];
                };
            };
        };
    };
    getAllLocalAuthorities: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocalAuthority"][];
                };
            };
        };
    };
    getFacilityType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
            /** @description Facility not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FacilityType"];
                };
            };
        };
    };
    getCourtHistoryByCourtName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                courtName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful - Will return an empty response when no Court matches name */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
        };
    };
    getCourtHistoryById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                courtHistoryId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful - Court History Found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Court History Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
        };
    };
    deleteByCourtHistoryId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                courtHistoryId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfuly deleted court history */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
            /** @description Court History Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"];
                };
            };
        };
    };
    getAllCourtEmailDescTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailType"][];
                };
            };
        };
    };
    getAllCourtTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtType"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtType"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtType"][];
                };
            };
        };
    };
    getCourtHistoryByCourtId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                courtId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful - Will return an empty response when no Court matches ID */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
        };
    };
    deleteCourtHistoriesByCourtId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                courtId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfuly deleted court histories */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
            /** @description Unauthorised user */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtHistory"][];
                };
            };
        };
    };
    getAllAreasOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpoeAreaOfLaw"][];
                };
            };
        };
    };
    getAllCounties: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["County"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["County"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["County"][];
                };
            };
        };
    };
    getContactType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
            /** @description Contact type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContactType"];
                };
            };
        };
    };
    getAudits: {
        parameters: {
            query: {
                page: number;
                size: number;
                location?: string;
                email?: string;
                dateFrom?: string;
                dateTo?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Audit"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Audit"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Audit"][];
                };
            };
        };
    };
    getAreaOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
            /** @description Area of Law not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AreaOfLaw"];
                };
            };
        };
    };
    getAllCourtAddressTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressType"][];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressType"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddressType"][];
                };
            };
        };
    };
    welcome: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    deleteOpeningType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                openingTypeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Opening type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Opening type in use */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
        };
    };
    deleteFacilityType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                facilityTypeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Facility Type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Facility Type in use */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
        };
    };
    deleteCourtByEmail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userEmail: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Delete a court by email */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
        };
    };
    deleteCourtLockBySlugAndEmail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
                userEmail: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Deleted */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourtLock"][];
                };
            };
        };
    };
    deleteContactType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                contactTypeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Contact type not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Contact type in use */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
        };
    };
    deleteAreaOfLaw: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                areaOfLawId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Area of Law not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
            /** @description Area of Law in use */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": number;
                };
            };
        };
    };
}
